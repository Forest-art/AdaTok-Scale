experiment:
    project: "FlexRep_s256_tok_stage1"
    name: "FlexRep_s256_tok_stage1"
    output_dir: "exp/FlexRep_s256_tok_stage1"
    max_train_examples: 1_281_167
    save_every: 10_000
    eval_every: 5000000
    generate_every: 300_000
    log_every: 50
    log_grad_norm_every: 1_000
    resume: False
    init_weight: ""


model:
    vq_model:
        model_type: flexrep-tok
        codebook_size: 4096
        token_size: 12
        is_legacy: False
        use_l2_norm: True
        commitment_cost: 0.25
        # vit arch
        vit_enc_model_size: "small"
        vit_dec_model_size: "small"
        vit_enc_patch_size: 16
        vit_dec_patch_size: 16
        num_latent_tokens: 256
        finetune_decoder: False
        pretrained_tokenizer_weight: "./pretrained_models/maskgit-vqgan-imagenet-f16-256.bin"
    
losses:
    quantizer_weight: 1.0

dataset:
  train:
    target: data.imagenet.ImageNetDataset
    params:
      root: "/mnt/hwfile/ai4earth/wangzidong/datasets/imagenet1k/images/"
      mode: "train"
      image_size: 256
  val:
    target: data.imagenet.ImageNetDataset
    params:
      root: "/mnt/hwfile/ai4earth/wangzidong/datasets/imagenet1k/images/"
      mode: "val"
      image_size: 256


optimizer:
    name: adamw 
    params:
        learning_rate: 1e-4
        beta1: 0.9
        beta2: 0.99
        weight_decay: 1e-4
        epsilon: 1e-8

lr_scheduler:
    scheduler: "cosine"
    params:
        learning_rate: ${optimizer.params.learning_rate}
        warmup_steps: 10_000
        end_lr: 1e-5

training:
    gradient_accumulation_steps: 1
    per_gpu_batch_size: 64
    mixed_precision: "fp16"
    enable_tf32: True
    enable_wandb: True
    use_ema: True
    seed: 42
    max_train_steps: 1_000_000
    num_generated_images: 2
    max_grad_norm: 1.0
